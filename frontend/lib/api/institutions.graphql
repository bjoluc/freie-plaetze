fragment AgeRange on Institution {
  ageFrom
  ageTo
}

fragment Gist on Institution {
  city
  type
  gender
  ...AgeRange
}

fragment PlacesStat on Institution {
  placesAvailable
  placesTotal
  lastUpdated
}

fragment BasicInstitutionInfo on Institution {
  id
  slug
  name
  photo {
    url
    ref
  }
  ...PlacesStat
  ...Gist
}

fragment InstitutionPageContent on Institution {
  ...BasicInstitutionInfo
  descriptionPlain
  logo {
    url
    ref
  }
  street
  streetNumber
  zip
  homepage
  email
  phone
  mobilePhone
}

query searchInstitutions(
  $cityOrZip: String!
  $radius: Int!
  $age: Int
  $genderTypes: [InstitutionGenderType!]
  $institutionTypes: [InstitutionTypeType!]
  $offset: Int
  $limit: Int
) {
  institutionSearchResults(
    cityOrZip: $cityOrZip
    radius: $radius
    age: $age
    offset: $offset
    limit: $limit
    where: { gender: { in: $genderTypes }, type: { in: $institutionTypes } }
    orderBy: { placesAvailable: desc }
  ) {
    ...BasicInstitutionInfo
  }
  institutionSearchResultsCount(
    cityOrZip: $cityOrZip
    radius: $radius
    age: $age
    where: { gender: { in: $genderTypes }, type: { in: $institutionTypes } }
  )
}

query institutionSlugs {
  institutions {
    slug
  }
}

query institutionBySlug($slug: String!) {
  institution(where: { slug: $slug }) {
    ...InstitutionPageContent
  }
}

fragment TextualInstitutionFields on Institution {
  name
  type
  gender
  ageFrom
  ageTo
  placesAvailable
  placesTotal
  street
  streetNumber
  zip
  city
  homepage
  email
  phone
  mobilePhone
  descriptionPlain
}

fragment EditableInstitutionFields on Institution {
  ...TextualInstitutionFields
  photo {
    url
    ref
  }
  logo {
    url
    ref
  }
}

query myInstitutions($userId: ID!) {
  institutions(where: { owner: { id: { equals: $userId } } }, orderBy: { name: asc }) {
    id
    ...EditableInstitutionFields
    ...InstitutionPageContent
    ...BasicInstitutionInfo
  }
}

mutation addInstitution(
  $ownerId: ID!
  $name: String!
  $type: InstitutionTypeType!
  $gender: InstitutionGenderType!
  $ageFrom: Int!
  $ageTo: Int!
  $placesAvailable: Int!
  $placesTotal: Int!
  $street: String!
  $streetNumber: String!
  $zip: String!
  $city: String!
  $homepage: String
  $email: String
  $phone: String
  $mobilePhone: String
  $descriptionPlain: String
  $photo: ImageFieldInput
  $logo: ImageFieldInput
) {
  createInstitution(
    data: {
      owner: { connect: { id: $ownerId } }
      name: $name
      type: $type
      gender: $gender
      ageFrom: $ageFrom
      ageTo: $ageTo
      placesAvailable: $placesAvailable
      placesTotal: $placesTotal
      street: $street
      streetNumber: $streetNumber
      zip: $zip
      city: $city
      homepage: $homepage
      email: $email
      phone: $phone
      mobilePhone: $mobilePhone
      descriptionPlain: $descriptionPlain
      photo: $photo
      logo: $logo
    }
  ) {
    id
    ...EditableInstitutionFields
  }
}

query institutionById($id: ID!) {
  institution(where: { id: $id }) {
    id
    ...EditableInstitutionFields
    ...InstitutionPageContent
  }
}

mutation updateInstitution(
  $institutionId: ID!
  $name: String!
  $type: InstitutionTypeType!
  $gender: InstitutionGenderType!
  $ageFrom: Int!
  $ageTo: Int!
  $placesAvailable: Int!
  $placesTotal: Int!
  $street: String!
  $streetNumber: String!
  $zip: String!
  $city: String!
  $homepage: String
  $email: String
  $phone: String
  $mobilePhone: String
  $descriptionPlain: String
  $photo: ImageFieldInput
  $logo: ImageFieldInput
) {
  updateInstitution(
    where: { id: $institutionId }
    data: {
      name: $name
      type: $type
      gender: $gender
      ageFrom: $ageFrom
      ageTo: $ageTo
      placesAvailable: $placesAvailable
      placesTotal: $placesTotal
      street: $street
      streetNumber: $streetNumber
      zip: $zip
      city: $city
      homepage: $homepage
      email: $email
      phone: $phone
      mobilePhone: $mobilePhone
      descriptionPlain: $descriptionPlain
      photo: $photo
      logo: $logo
    }
  ) {
    id
    ...EditableInstitutionFields
  }
}

mutation updateAvailablePlaces($institutionId: ID!, $placesAvailable: Int!) {
  updateInstitution(where: { id: $institutionId }, data: { placesAvailable: $placesAvailable }) {
    id
    placesAvailable
    lastUpdated
  }
}

mutation deleteInstitution($institutionId: ID!) {
  deleteInstitution(where: { id: $institutionId }) {
    id
  }
}
